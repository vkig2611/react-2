name: Deploy to Docker Swarm

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Notify Slack - Deployment Started üöÄ
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "üöÄ *Deployment started!* Deploying v2 to Docker Swarm..."
          }' $SLACK_WEBHOOK_URL

      - name: SSH into Server and Check if v1 is Running
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            STATUS=$(docker service ps hello-world-app --format "{{.CurrentState}}" | grep Running | wc -l)
            if [ "$STATUS" -eq "0" ]; then
              echo "v1 is NOT running! Deploying v1 before proceeding."
              docker service create --name hello-world-app --publish 4000:80 vk2615/hello-world-1:v1
              sleep 10
            else
              echo "v1 is already running. Proceeding with v2 deployment."
            fi

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push v2 Docker Image
        run: |
          IMAGE_TAG=vk2615/hello-world-1:v2
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Deploy v2 to Swarm
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Pulling latest v2 image..."
            docker pull vk2615/hello-world-1:v2
            echo "Deploying v2..."
            docker service update --force --image vk2615/hello-world-1:v2 hello-world-app
            sleep 10

      - name: Health Check for v2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
        continue-on-error: true
        script: |
          echo "Checking if v2 is running successfully..."
          sleep 15
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4000)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "v2 is failing! Forcing rollback to v1..."
            docker service update --force --image vk2615/hello-world-1:v1 hello-world-app
            exit 1  # Mark this step as failed so CI/CD knows it failed
          else
            echo "v2 is running successfully!"
      
      - name: Notify Slack - Deployment Successful ‚úÖ
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "‚úÖ *Deployment successful!* v2 is now running on Docker Swarm. üéâ"
          }' $SLACK_WEBHOOK_URL

      - name: Notify Slack - Rollback to v1 ‚ùå
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "‚ùå *Deployment failed!* v2 was buggy. Rolled back to v1 automatically. ‚ö†Ô∏è"
          }' $SLACK_WEBHOOK_URL
